; FastStack Config
; ================
;
; Note:
;  * All values are case-insensitive.
;
;  * Values specified in ms are usually rounded up to the nearest multiple
;    of msPerTick.


[game]

; Which randomizer to use.
;
; simple    - Memoryless
; bag7      - Standard Bag (default)
; noszobag7 - Standard Bag with no S, Z, O first piece
; tgm1      - TGM1
; tgm2      - TGM2
randomizer = noszobag7

; Which rotation system to use.
;
; simple    - Sega Rotation; No wallkicks
; sega      - Sega Rotation
; srs       - Super Rotation System (default)
; arikasrs  - SRS \w symmetric I wallkick
; tgm12     - Sega Rotation; Symmetric Wallkicks
; tgm3      - tgm12 \w I floorkicks
; dtet      - Sega Rotation; Simple Symmetric Wallkicks
rotationSystem = srs

; How many blocks gravity will cause the piece to fall every ms.
;
; To convert G (standard tetris gravity) to this form, divide input by 17.
; i.e. 20G = 20 / 17 = 1.127.
gravity = 0.000625

; How many blocks soft drop will cause the piece to fall every ms.
softDropGravity = 5

; Delay (in ms) between piece placement and piece spawn.
areDelay = 0

; Whether ARE delay be cancelled on user input.
areCancellable = true

; Delay (in ms) before a piece locks.
lockDelay = 150

; How many floorkicks can be performed before the piece locks. (0 = infinite)
floorkickLimit = 1

; Behaviour used for initial actions (IRS/IHS).
;
; none       - IRS/IHS disabled (default)
; persistent - Triggered solely by current keystate
; trigger    - Explicit new event required (unimplemented)
initialActionStyle = none

; Behaviour used for lock reset.
;
; entry      - Reset only on new piece spawn
; step       - Reset on downward movement
; move       - Reset on any succssful movement/rotation (default)
lockStyle = move

; Whether soft drop is held through new piece spawns.
;
; Note: The current implementation only works properly with 'softDropGravity'
; set to instant (above 2).
oneShotSoftDrop = true

; Length of a single game tick.
msPerTick = 8

; Period at which the draw phase is performed.
ticksPerDraw = 2

; Width of the play field.
fieldWidth = 10

; Height of the playfield.
fieldHeight = 20

; Whether we can hold as many times as we want during pre-game.
infiniteReadyGoHold = true

; Length (in ms) of the Ready phase.
readyPhaseLength = 833

; Length (in ms) of the Go phase.
goPhaseLength = 833

; Number of preview pieces to display (max 4).
nextPieceCount = 4

; Target number of lines to clear.
goal = 40


[control]

; Delay (in ms) before a piece begins to auto shift.
dasDelay = 150

; Number of blocks to move per ms during DAS (0 = infinite)
dasSpeed = 0


[keybind]
rotateLeft = z
rotateRight = x
rotate180 = a
left = left
right = right
down = down
up = space
hold = c


[frontend.sdl2]

; Show the debug screen during execution
showDebug = false
